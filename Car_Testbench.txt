;===============================================================
; RIT Hot Wheelz - OS26
;===========================================
;
;   Copyright Â© 2016, all rights reserved
;
;		RIT Hot Wheelz Formula SAE Electric Team
;		Rochester Institue of Technology
;   77 Lomb Memorial Dr
;		Rochester, NY 14623                             	          
;   
; Engage=THE DISPLAY
;
;-------------------------------------------------------------------------------------
;   Revision History (reflected in the VCL App Version variable that is displayed on the 1313)
;-------------------------------------------------------------------------------------
;
; 01/30/2016 - Cindy Gomez  - V1.00 Initial Revision. This revision includes:
;	- Created subroutines for each of the following modes: Drag Race Mode, Endurance Mode, Autocross Mode.
;	- Each of the modes changes the Max Current and turns on the Mode Switch Lights when that mode is active.              
;
; 02/01/2016 - Patrick Cody - V1.01. This revision includes:
;	- Added declarations
;	- Added Interlock Check to activate throttle
;
; 03/01/2016 - Cindy Gomez - V1.05. This revision includes:
;	-Modified one time init for main contactor, precharge, interlock functions
;	-Added Motor Type declaration
;	-Add CAN Message Type Constants
;	-Modified CAN1 and CAN 14 mailboxes, only ones necessary for test bench
;	-Moved buzzer case into main loop
;															
;See GitHub Revisions for remainder of revisions
;
;
;
;										
VCL_App_Ver = 101	;Set VCL software revision (101 is Rev 1.01)
;
;---------------------------------------------------------------
; Declaration Section
;--------------------
	
;	Motor_Type = 211    this should be set with the 1314 software

	Interlock_Switch		equals 	SW_3
	
	Forward_Switch			equals  SW_7
	Reverse_Switch			equals  SW_8
	
	Drag_Mode_Switch		equals	SW_6
	Drag_Mode_Switch_UP		equals	SW_6_UP				;Used if up edge is used for input signal
	Drag_Mode_Switch_DOWN		equals	SW_6_DOWN			;Used if down edge is used for input signal
	
	Endurance_Mode_Switch		equals	SW_5
	Endurance_Mode_Switch_UP	equals	Sw_5_UP			;Used if up edge is used for input signal
	Endurance_Mode_Switch_DOWN	equals	Sw_5_DOWN		;Used if down edge is used for input signal
	
	AutoCross_Mode_Switch		equals	SW_4
	AutoCross_Mode_Switch_UP	equals	Sw_4_UP			;Used if up edge is used for input signal
	AutoCross_Mode_Switch_DOWN	equals	Sw_4_DOWN		;Used if down edge is used for input signal

	Buzzer_Noise				equals PWM5			;Using proportional driver to power noise maker
	
	Drag_Lights					equals	PWM6			;Analog Out 0-10V
	Endurance_Lights			equals	DigOut6		;Driver 6 OFF/ON
	AutoCross_Lights			equals	DigOut7		;Driver 7 OFF/ON
	
	Drag_MaxCurrent_DLY			equals	DLY1
	Drag_MaxCurrent_DLY_Output	equals	DLY1_Output
	
	Buzzer_DLY					equals  DLY2		
	Buzzer_DLY_Output			equals	DLY2_Output
	
	Program_Flags			equals	User_Bit1
	Drag_Mode_Initialized_Flag 		 bit	Program_Flags.1
;	Not Used				 bit	Program_Flags.2
;	Not Used				 bit	Program_Flags.4
;	Not Used				 bit	Program_Flags.8
;	Not Used				 bit	Program_Flags.16
;	Not Used				 bit	Program_Flags.32
;	Not Used				 bit	Program_Flags.64
;	Not Used				 bit	Program_Flags.128
	
	
	
;===============================================================================
; CAN System Declarations
;===============================================================================

;------------------------------------------------------------------------------
; Message Types
; -These message types are defined in the CAN-Open  protocol and
;  appear in the upper-most 4 bits of the 11-BIT message identifier
;------------------------------------------------------------------------------
;NMT                constant        0x000       ; Network Management
SYNC_ERR_BASE       constant        0x080       ; Both Sync (COB-ID=0) & Error (COB-ID=Error)
TIME_STAMP          constant        0x100
PDO1_TX_BASE        constant        0x180       ; Process Data Object (Master In  Slave Out)
PDO1_RX_BASE        constant        0x200       ; Process Data Object (Master Out Slave In)
PDO2_TX_BASE        constant        0x280       ; Process Data Object (System Broadcast 1)
PDO2_RX_BASE        constant        0x300       ; Process Data Object (System Broadcast 2)
PDO3_TX_BASE        constant        0x380       ; Process Data Object (System Broadcast 3)
PDO3_RX_BASE        constant        0x400       ; Process Data Object (System Broadcast 4)
PDO4_TX_BASE        constant        0x480       ; Index Data Object   (Master In  Slave Out)
PDO4_RX_BASE        constant        0x500       ; Index Data Object   (Master Out Slave In)
SDO_MISO_BASE       constant        0x580       ; Service Data Object (Master In  Slave Out)
SDO_MOSI_BASE       constant        0x600       ; Service Data Object (Master Out Slave In)
HEARTBEAT_BASE      constant        0x700       ; Node Guard Message

DLC_NMT             constant        0x2         ; Data Length Code of a CANopen NMT Message
DLC_EMCY            constant        0x8         ; Data Length Code of a CANopen EMCY Message
DLC_PDO             constant        0x8         ; Data Length Code of a CANopen PDO Message
DLC_SDO             constant        0x8         ; Data Length Code of a CANopen SDO Message
DLC_HEARTBEAT       constant        0x1         ; Data Length Code of a CANopen Heartbeat Message
    
;-------------------------------------------------------------------------------
; synchronous cycle period defintion
;-------------------------------------------------------------------------------
SYNC_SEND_PERIOD        constant    5   ; 10 * 4ms = 40ms	
		
	
	
;===============================================================
; One time Initialization
;========================
;
;		Main_Enable = ON		this should be set with the 1314 software
;		Interlock_Type = 0		this should be set with the 1314 software
;		Precharge_Enable = ON		this should be set with the 1314 software

		Program_Flags = 0
;		VCL_Throttle_Enable = ON	this should be set with the 1314 software
		
		Setup_Delay(Buzzer_DLY,3000)		;Amount of time for ready to drive noise
;		PD_Enable = OFF			this should be set with the 1314 software
	
		Call startup_CAN_System				;Start CAN to send info from controller to display		;you want this in the one-time section. 
		
	
;-------------------------------------------------------------------------
; Main :: Main Loop of the Program
;---------------------------------------------
;
MainLoop:
	
	

	If(Buzzer_DLY_Output<>0)             ;while the buzzer delay output does not equal 0, sound the buzzer
	  {
            Put_PWM(Buzzer_Noise, 32767)         ;turn on the buzzer
	  }
  Else
  	{
			Put_PWM(Buzzer_Noise,0)              ;turn off the buzzer
		}
	
	if (Interlock_Switch = ON)		;The Interlock Switch is the switch on the throttle pedal. If the switch is off, do not allow throttle command
		{
			Throttle_Multiplier = 128
		}
	else
		{
			Throttle_Multiplier = 0
		}
		
	if (Reverse_Switch = ON)			;slow down how fast the car can run in reverse
		{
			Max_Speed_SpdMx = 500
			Accel_Rate_SpdMx = 15000
		}	
	
	if (Drag_Mode_Switch_UP = ON)		;Someone pressed Drag Mode Button
		{
			Endurance_Mode_Switch_UP = OFF
			AutoCross_Mode_Switch_UP = OFF
			Call DragMode
			Drag_Mode_Switch_UP = OFF
			Setup_Delay(Drag_MaxCurrent_DLY,7000)		;Drag should exit after 7~8 seconds without input from driver
		}
	if (Endurance_Mode_Switch_UP = ON)		;Someone pressed Endurance Mode Button
		{
			AutoCross_Mode_Switch_UP = OFF
			Drag_Mode_Switch_UP = OFF
			Call EnduranceMode
			Endurance_Mode_Switch_UP = OFF
		}
	if ((AutoCross_Mode_Switch_UP = ON)|((Drag_MaxCurrent_DLY_Output = 0)&(Drag_Mode_Initialized_Flag = ON)))	;If AutoCross Mode Switch UP edge is sensed OR the Drag_MaxCurrent_DLY = 0 AND Drag_Mode_Initialized_Flag = ON
		{
			Endurance_Mode_Switch_UP = OFF
			Drag_Mode_Switch_UP = OFF
			Drag_Mode_Initialized_Flag = OFF
			Call AutoCrossMode
			AutoCross_Mode_Switch_UP = OFF
		}
		
	else if ((Reverse_Switch = OFF)&(Forward_Switch = OFF))     ;if the car is in neutral, reduce speed and cut throttle
	
		{ 
			Decel_Rate_SpdMx = 9000
			Max_Speed_SpdMx = 400
			Throttle_Multiplier= 0
		}
;	else
;		{
;			;Do Nothing
;		}
			
	goto MainLoop
	
	
;-------------------------------------------------------------------------
; Subroutines
;---------------------------------------------
;

DragMode:			

	Drive_Current_Limit = 26213 		;MAX Amps = 400A which is 80% of 32767
	Put_PWM(Drag_Lights,32767)     		;drag light = ON	
	Clear_Digout(AutoCross_Lights)		;Turn off autocross light
	Clear_Digout(Endurance_Lights)		;Turn off endurance light		
	Drag_Mode_Initialized_Flag = ON 	;Turn on Drag Mode Flag
	
	return
		
EnduranceMode:
	
	Drive_Current_Limit = 6553			;MAX AMPS = 100A which is 20% of 32767
	Set_Digout(Endurance_Lights)		;endurance light = ON
	Clear_Digout(AutoCross_Lights)		;Turn off autocross light
	Put_PWM(Drag_Lights,0) 				;Turn off drag light

	return

AutoCrossMode:
			
	
	Drive_Current_Limit = 16383 		;MAX AMPS = 250A which is 50% of 32767
	Set_Digout(AutoCross_Lights) 		;Turn on autocross light	
	Put_PWM(Drag_Lights,0)				;Turn off drag light
	Clear_DigOut(Endurance_Lights)		;Turn off endurance light

	return
	
	



;-------------------------------------------------------------------------
; Startup CAN system
;---------------------------------------------
;Mailbox 1 - NMT Send mailbox
;Mailbox 14 - E7 PDO1_MISO

startup_CAN_System:

  ;set suppress_CanOpen Init to 1 in parameter block to prevent startup of CAN slave system

  Suppress_CANopen_Init = 0     ;first undo suppress, then startup CAN, then disable CANopen

  Setup_CAN(CAN_Baud_Rate,0,0,-1,0) ; Baudrate from parameter block, no Sync, Not Used, Node ID from Parameter Block, Auto Restart

;-------------------------------------------------------------------------------
; MAILBOX 1
;   Purpose:        Send NMT message from controller(master) to all slaves
;   Type:           NMT
;   Transmition:    Only sent once to put slave into operational mode after configuration 
;   Data Length:    2 Bytes
;-------------------------------------------------------------------------------

Setup_Mailbox(CAN1,0,0,0x000,C_EVENT,C_XMT,0,0)
Setup_Mailbox_Data(CAN1,DLC_NMT,
									@NMT_Command_Specifier, 
									@NMT_Node_Address,
									0,0,0,0,0,0)

;-------------------------------------------------------------------------------
; MAILBOX 14
;   Purpose:        Send information from controller(master) to display
;   Type:           PDO_MOSI
;   Transmition:    Cycllically send data about motor current, RPM, and temp
;						 to display
;   Data Length:    4 Bytes
;-------------------------------------------------------------------------------

Setup_Mailbox(CAN14,0,0,PDO1_RX_BASE + Par_E7_Node_ID,C_CYCLIC,C_XMT,0,0)
Setup_Mailbox_Data(CAN14,DLC_PDO,
									@Current_RMS, 
									@Current_RMS+USEHB,
									@Motor_RPM_Display,
									@Motor_RPM_Display+USEHB,
									@Motor_Temperature,
									@Motor_Temperature+USEHB,
									0,0)


Startup_CAN()
Send_Mailbox(CAN1)

CAN_Set_Cyclic_Rate(SYNC_SEND_PERIOD)   ;send info at 20ms

Startup_CAN_Cyclic()

return
